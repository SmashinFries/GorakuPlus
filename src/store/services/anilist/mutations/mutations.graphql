mutation ToggleFav($animeId: Int, $mangaId: Int, $characterId: Int, $staffId: Int, $studioId: Int) {
	ToggleFavourite(
		animeId: $animeId
		mangaId: $mangaId
		characterId: $characterId
		staffId: $staffId
		studioId: $studioId
	) {
		__typename
		anime {
			edges {
				node {
					id
					isFavourite
				}
			}
		}
		manga {
			edges {
				node {
					id
					isFavourite
				}
			}
		}
		characters {
			edges {
				node {
					id
					isFavourite
				}
			}
		}
		staff {
			edges {
				node {
					id
					isFavourite
				}
			}
		}
		studios {
			edges {
				node {
					id
					isFavourite
				}
			}
		}
	}
}

mutation SaveMediaListItem(
	$id: Int
	$mediaId: Int
	$status: MediaListStatus
	$score: Float
	$scoreRaw: Int
	$progress: Int
	$progressVolumes: Int
	$private: Boolean
	$hideFromStatusList: Boolean
	$repeat: Int
	$startedAt: FuzzyDateInput
	$completedAt: FuzzyDateInput
	$notes: String
	$customLists: [String]
) {
	SaveMediaListEntry(
		id: $id
		mediaId: $mediaId
		status: $status
		score: $score
		progress: $progress
		progressVolumes: $progressVolumes
		repeat: $repeat
		startedAt: $startedAt
		completedAt: $completedAt
		notes: $notes
		private: $private
		hiddenFromStatusLists: $hideFromStatusList
		scoreRaw: $scoreRaw
		customLists: $customLists
	) {
		id
		status
		score
		progress
		repeat
		media {
			type
			format
			countryOfOrigin
		}
		startedAt {
			year
			month
			day
		}
		completedAt {
			year
			month
			day
		}
		notes
		private
		hiddenFromStatusLists
	}
}

mutation DeleteMediaListItem($id: Int) {
	DeleteMediaListEntry(id: $id) {
		deleted
	}
}

mutation ChangeLanguage(
	$titleLanguage: UserTitleLanguage
	$staffNameLanguage: UserStaffNameLanguage
) {
	UpdateUser(titleLanguage: $titleLanguage, staffNameLanguage: $staffNameLanguage) {
		id
	}
}

mutation UpdateViewer($notificationOptions: [NotificationOptionInput], $displayNSFW: Boolean) {
	UpdateUser(displayAdultContent: $displayNSFW, notificationOptions: $notificationOptions) {
		id
	}
}

mutation SaveRecom($mediaId: Int, $mediaRecommendationId: Int, $rating: RecommendationRating) {
	SaveRecommendation(
		mediaId: $mediaId
		mediaRecommendationId: $mediaRecommendationId
		rating: $rating
	) {
		rating
		userRating
	}
}

mutation DeleteAct($id: Int) {
	DeleteActivity(id: $id) {
		deleted
	}
}

mutation ReviewRating($id: Int, $rating: ReviewRating) {
	RateReview(reviewId: $id, rating: $rating) {
		id
		userRating
	}
}

mutation UpdateUser(
	$about: String
	$titleLanguage: UserTitleLanguage
	$staffNameLanguage: UserStaffNameLanguage
	$airingNotifications: Boolean
	$displayAdultContent: Boolean
	$scoreFormat: ScoreFormat
	$rowOrder: String
	$profileColor: String
	$donatorBadge: String
	$notificationOptions: [NotificationOptionInput]
	$animeListOptions: MediaListOptionsInput
	$mangaListOptions: MediaListOptionsInput
	$timezone: String
	$activityMergeTime: Int
	$restrictMessagesToFollowing: Boolean
	$disabledListActivity: [ListActivityOptionInput]
) {
	UpdateUser(
		about: $about
		titleLanguage: $titleLanguage
		staffNameLanguage: $staffNameLanguage
		airingNotifications: $airingNotifications
		displayAdultContent: $displayAdultContent
		scoreFormat: $scoreFormat
		rowOrder: $rowOrder
		profileColor: $profileColor
		donatorBadge: $donatorBadge
		notificationOptions: $notificationOptions
		animeListOptions: $animeListOptions
		mangaListOptions: $mangaListOptions
		timezone: $timezone
		activityMergeTime: $activityMergeTime
		restrictMessagesToFollowing: $restrictMessagesToFollowing
		disabledListActivity: $disabledListActivity
	) {
		id
		name
		about
		avatar {
			large
		}
		bannerImage
		unreadNotificationCount
		donatorTier
		donatorBadge
		moderatorRoles
		options {
			titleLanguage
			staffNameLanguage
			restrictMessagesToFollowing
			airingNotifications
			displayAdultContent
			profileColor
			timezone
			activityMergeTime
			notificationOptions {
				type
				enabled
			}
			disabledListActivity {
				type
				disabled
			}
		}
		mediaListOptions {
			scoreFormat
			rowOrder
			animeList {
				customLists
				sectionOrder
				splitCompletedSectionByFormat
				advancedScoring
				advancedScoringEnabled
			}
			mangaList {
				customLists
				sectionOrder
				splitCompletedSectionByFormat
				advancedScoring
				advancedScoringEnabled
			}
		}
	}
}

mutation ToggleFollow($userId: Int) {
	ToggleFollow(userId: $userId) {
		id
		isFollowing
	}
}
