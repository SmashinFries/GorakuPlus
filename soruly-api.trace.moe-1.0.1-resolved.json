{
  "openapi": "3.0.0",
  "info": {
    "title": "api.trace.moe",
    "description": "api.trace.moe",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://api.trace.moe/",
      "description": "Production Server"
    }
  ],
  "security": [
    {
      "ApiKeyInHeader": []
    },
    {
      "ApiKeyInQuery": []
    }
  ],
  "paths": {
    "/search": {
      "get": {
        "summary": "Get search result of an anime screeshot",
        "parameters": [
          {
            "name": "anilistInfo",
            "in": "query",
            "description": "Include Anilist info",
            "required": false,
            "allowEmptyValue": true,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "^$",
              "type": "string"
            }
          },
          {
            "name": "cutBorders",
            "in": "query",
            "description": "Cut black borders",
            "required": false,
            "allowEmptyValue": true,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "^$",
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "Image URL",
            "required": true,
            "allowEmptyValue": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "anilistID",
            "in": "query",
            "description": "Filter by Anilist ID",
            "required": false,
            "allowEmptyValue": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A search response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Image is malformed, or some params are incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "402": {
            "description": "Search quota or concurrency limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "No permission to access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The requested resourse is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Wrong HTTP method used",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "HTTP rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Database is overloaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "504": {
            "description": "Database is not responding",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Get search result of an anime screeshot",
        "parameters": [
          {
            "name": "anilistInfo",
            "in": "query",
            "description": "Include Anilist info",
            "required": false,
            "allowEmptyValue": true,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "^$",
              "type": "string"
            }
          },
          {
            "name": "cutBorders",
            "in": "query",
            "description": "Cut black borders",
            "required": false,
            "allowEmptyValue": true,
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "^$",
              "type": "string"
            }
          },
          {
            "name": "anilistID",
            "in": "query",
            "description": "Filter by Anilist ID",
            "required": false,
            "allowEmptyValue": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/search_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A search response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Image is malformed, or some params are incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "402": {
            "description": "Search quota or concurrency limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "No permission to access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The requested resourse is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Wrong HTTP method used",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "HTTP rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Database is overloaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "504": {
            "description": "Database is not responding",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get info about your account",
        "responses": {
          "200": {
            "description": "A user response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Image is malformed, or some params are incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "No permission to access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The requested resourse is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Wrong HTTP method used",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "HTTP rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "User": {
        "required": [
          "concurrency",
          "id",
          "priority",
          "quota",
          "quotaUsed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "IP address (guest) or email address (user)"
          },
          "priority": {
            "type": "integer",
            "description": "Your priority in search queue"
          },
          "concurrency": {
            "type": "integer",
            "description": "Number of parallel search requests you can make"
          },
          "quota": {
            "type": "integer",
            "description": "Search quota you have for this month"
          },
          "quotaUsed": {
            "type": "integer",
            "description": "Search quota you have used this month"
          }
        }
      },
      "SearchResult": {
        "required": [
          "error",
          "frameCount",
          "result"
        ],
        "type": "object",
        "properties": {
          "frameCount": {
            "type": "integer",
            "description": "frames compared for image search"
          },
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "result": {
            "type": "array",
            "description": "Search results",
            "items": {
              "$ref": "#/components/schemas/Result"
            }
          }
        }
      },
      "Result": {
        "required": [
          "anilist",
          "episode",
          "filename",
          "from",
          "image",
          "similarity",
          "to",
          "video"
        ],
        "type": "object",
        "properties": {
          "anilist": {
            "description": "The matching Anilist ID or Anilist info",
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Anilist"
              }
            ]
          },
          "filename": {
            "type": "string",
            "description": "The filename of file where the match is found"
          },
          "episode": {
            "description": "The extracted episode number from filename",
            "oneOf": [
              {
                "type": "number",
                "nullable": true
              },
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          },
          "from": {
            "type": "number",
            "description": "Starting time of the matching scene (seconds)"
          },
          "to": {
            "type": "number",
            "description": "Ending time of the matching scene (seconds)"
          },
          "similarity": {
            "type": "number",
            "description": "Similarity compared to the search image"
          },
          "video": {
            "type": "string",
            "description": "URL to the preview video of the matching scene"
          },
          "image": {
            "type": "string",
            "description": "URL to the preview image of the matching scene"
          }
        }
      },
      "Anilist": {
        "required": [
          "id",
          "idMal",
          "isAdult",
          "synonyms",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Anilist ID"
          },
          "idMal": {
            "type": "integer",
            "description": "MyAnimeList ID",
            "nullable": true
          },
          "isAdult": {
            "type": "boolean",
            "description": "Adult anime or not"
          },
          "synonyms": {
            "type": "array",
            "description": "Alias titles",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "$ref": "#/components/schemas/Anilist_title"
          }
        }
      },
      "search_body": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Anilist_title": {
        "required": [
          "english",
          "native",
          "romaji"
        ],
        "type": "object",
        "properties": {
          "native": {
            "type": "string",
            "description": "Native title",
            "nullable": true
          },
          "romaji": {
            "type": "string",
            "description": "Romaji title"
          },
          "english": {
            "type": "string",
            "description": "English title",
            "nullable": true
          }
        }
      }
    },
    "responses": {
      "User": {
        "description": "A user response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "ErrorBadRequest": {
        "description": "Image is malformed, or some params are incorrect",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorPaymentRequired": {
        "description": "Search quota or concurrency limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorUnauthorized": {
        "description": "API key is invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorForbidden": {
        "description": "No permission to access",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorNotFound": {
        "description": "The requested resourse is not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorMethodNotAllowed": {
        "description": "Wrong HTTP method used",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorTooManyRequests": {
        "description": "HTTP rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorInternalServerError": {
        "description": "Database error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorServiceUnavailable": {
        "description": "Database is overloaded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorGatewayTimeout": {
        "description": "Database is not responding",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Success": {
        "description": "A search response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SearchResult"
            }
          }
        }
      }
    },
    "parameters": {
      "url": {
        "name": "url",
        "in": "query",
        "description": "Image URL",
        "required": true,
        "allowEmptyValue": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "cutBorders": {
        "name": "cutBorders",
        "in": "query",
        "description": "Cut black borders",
        "required": false,
        "allowEmptyValue": true,
        "style": "form",
        "explode": true,
        "schema": {
          "pattern": "^$",
          "type": "string"
        }
      },
      "anilistInfo": {
        "name": "anilistInfo",
        "in": "query",
        "description": "Include Anilist info",
        "required": false,
        "allowEmptyValue": true,
        "style": "form",
        "explode": true,
        "schema": {
          "pattern": "^$",
          "type": "string"
        }
      },
      "anilistID": {
        "name": "anilistID",
        "in": "query",
        "description": "Filter by Anilist ID",
        "required": false,
        "allowEmptyValue": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": {
      "ApiKeyInHeader": {
        "type": "apiKey",
        "description": "API Key (if any)",
        "name": "x-trace-key",
        "in": "header"
      },
      "ApiKeyInQuery": {
        "type": "apiKey",
        "description": "API Key (if any)",
        "name": "key",
        "in": "query"
      }
    }
  }
}